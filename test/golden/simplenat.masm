use.std::math::u256
begin
  # This program was generated by Nightfall (https://github.com/qredo/nightfall), avoid editing by hand.

  push.1000000
  # var __dynPtr
  mem_store.1
  # var __dynPtr (felt)
  mem_load.1
  push.4
  # var __dynPtr (felt)
  mem_load.1
  mem_store
  # var __dynPtr (felt)
  mem_load.1
  push.1
  add
  # var __dynPtr
  mem_store.1
  push.31.0.120.0
  # var __dynPtr (felt)
  mem_load.1
  mem_storew
  dropw
  # var __dynPtr (felt)
  mem_load.1
  push.1
  add
  # var __dynPtr
  mem_store.1
  push.0.0.0.0
  # var __dynPtr (felt)
  mem_load.1
  mem_storew
  dropw
  # var __dynPtr (felt)
  mem_load.1
  push.1
  add
  # var __dynPtr
  mem_store.1
  push.7.0.0.0
  # var __dynPtr (felt)
  mem_load.1
  mem_storew
  dropw
  # var __dynPtr (felt)
  mem_load.1
  push.1
  add
  # var __dynPtr
  mem_store.1
  push.17.0.0.0
  # var __dynPtr (felt)
  mem_load.1
  mem_storew
  dropw
  # var __dynPtr (felt)
  mem_load.1
  push.1
  add
  # var __dynPtr
  mem_store.1
  # var n
  mem_store.0
  # var __dynPtr (felt)
  mem_load.1
  push.1
  # var __dynPtr (felt)
  mem_load.1
  mem_store
  # var __dynPtr (felt)
  mem_load.1
  push.1
  add
  # var __dynPtr
  mem_store.1
  push.4.0.0.0
  # var __dynPtr (felt)
  mem_load.1
  mem_storew
  dropw
  # var __dynPtr (felt)
  mem_load.1
  push.1
  add
  # var __dynPtr
  mem_store.1
  # var m
  mem_store.2
  # var n (nat)
  mem_load.0
  # var m (nat)
  mem_load.2
  # var yPtr
  mem_store.3
  # var xPtr
  mem_store.4
  # var yPtr (felt)
  mem_load.3
  mem_load
  # var ySize
  mem_store.5
  # var xPtr (felt)
  mem_load.4
  mem_load
  # var xSize
  mem_store.6
  push.1
  # var i
  mem_store.7
  padw
  # var xSize (felt)
  mem_load.6
  # var ySize (felt)
  mem_load.5
  u32checked_max
  # var counter1
  mem_store.8
  # var counter1 (felt)
  mem_load.8
  push.0
  eq
  not
  while.true
    padw
    # var i (felt)
    mem_load.7
    # var xSize (felt)
    mem_load.6
    lte
    if.true
      padw
      # var xPtr (felt)
      mem_load.4
      # var i (felt)
      mem_load.7
      add
      mem_loadw
      padw
      exec.u256::add_unsafe
    end
    # var i (felt)
    mem_load.7
    # var ySize (felt)
    mem_load.5
    lte
    if.true
      padw
      # var yPtr (felt)
      mem_load.3
      # var i (felt)
      mem_load.7
      add
      mem_loadw
      padw
      exec.u256::add_unsafe
    end
    # var i (felt)
    mem_load.7
    push.1
    add
    # var i
    mem_store.7
    # var counter1 (felt)
    mem_load.8
    push.1
    sub
    # var counter1
    mem_store.8
    # var counter1 (felt)
    mem_load.8
    push.0
    eq
    not
  end
  # var __dynPtr (felt)
  mem_load.1
  # var i (felt)
  mem_load.7
  add
  # var elPtr
  mem_store.9
  # var elPtr (felt)
  mem_load.9
  push.1
  add
  # var __dynPtr
  mem_store.1
  # var i (felt)
  mem_load.7
  # var counter2
  mem_store.10
  # var counter2 (felt)
  mem_load.10
  push.0
  eq
  not
  while.true
    # var elPtr (felt)
    mem_load.9
    mem_storew
    dropw
    # var elPtr (felt)
    mem_load.9
    push.1
    sub
    # var elPtr
    mem_store.9
    # var counter2 (felt)
    mem_load.10
    push.1
    sub
    # var counter2
    mem_store.10
    # var counter2 (felt)
    mem_load.10
    push.0
    eq
    not
  end
  # var i (felt)
  mem_load.7
  # var elPtr (felt)
  mem_load.9
  mem_store
  # var elPtr (felt)
  mem_load.9
  # var natPtr2
  mem_store.11
  # var natPtr2 (felt)
  mem_load.11
  mem_load
  # var counter3
  mem_store.12
  # var counter3 (felt)
  mem_load.12
  push.0
  eq
  not
  while.true
    # var natPtr2 (felt)
    mem_load.11
    push.1
    add
    # var natPtr2
    mem_store.11
    padw
    # var natPtr2 (felt)
    mem_load.11
    mem_loadw
    # var counter3 (felt)
    mem_load.12
    push.1
    sub
    # var counter3
    mem_store.12
    # var counter3 (felt)
    mem_load.12
    push.0
    eq
    not
  end
end
